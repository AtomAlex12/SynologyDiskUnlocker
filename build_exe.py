#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∫–∏ exe —Ñ–∞–π–ª–∞ Synology Drive Unlocker
"""

import os
import sys
import subprocess
import shutil

def install_pyinstaller():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PyInstaller...")
    try:
        subprocess.run([sys.executable, "-m", "pip", "install", "pyinstaller"], check=True)
        print("‚úÖ PyInstaller —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PyInstaller: {e}")
        return False

def build_exe():
    """–°–±–æ—Ä–∫–∞ exe —Ñ–∞–π–ª–∞"""
    print("üî® –°–±–æ—Ä–∫–∞ exe —Ñ–∞–π–ª–∞...")
    
    # –ö–æ–º–∞–Ω–¥–∞ PyInstaller
    cmd = [
        "pyinstaller",
        "--onefile",                    # –û–¥–∏–Ω exe —Ñ–∞–π–ª
        "--windowed",                   # –ë–µ–∑ –∫–æ–Ω—Å–æ–ª–∏
        "--name=SynologyDriveUnlocker", # –ò–º—è exe —Ñ–∞–π–ª–∞
        "--icon=icon.ico",              # –ò–∫–æ–Ω–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        "--add-data=requirements_simple.txt;.",  # –î–æ–±–∞–≤–∏—Ç—å requirements
        "synology_unlocker_final.py"   # –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
    ]
    
    # –£–±–∏—Ä–∞–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç
    if not os.path.exists("icon.ico"):
        cmd.remove("--icon=icon.ico")
    
    try:
        subprocess.run(cmd, check=True)
        print("‚úÖ Exe —Ñ–∞–π–ª —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        return False

def create_installer():
    """–°–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞"""
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–ª–∏–∑–∞
    release_dir = "release"
    if os.path.exists(release_dir):
        shutil.rmtree(release_dir)
    os.makedirs(release_dir)
    
    # –ö–æ–ø–∏—Ä—É–µ–º exe —Ñ–∞–π–ª
    exe_path = "dist/SynologyDriveUnlocker.exe"
    if os.path.exists(exe_path):
        shutil.copy2(exe_path, f"{release_dir}/SynologyDriveUnlocker.exe")
        print("‚úÖ Exe —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ release/")
    
    # –°–æ–∑–¥–∞–µ–º README
    readme_content = """# Synology Drive Unlocker - –ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è

## –û–ø–∏—Å–∞–Ω–∏–µ
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º—ã—Ö –¥–∏—Å–∫–æ–≤ –Ω–∞ Synology NAS.

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ
1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ SynologyDriveUnlocker.exe
2. –í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å NAS, –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å
3. –û—Ç–º–µ—Ç—å—Ç–µ "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å sudo"
4. –ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"
5. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø–∞—Ç—á:
   - "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ç—á" - –¥–ª—è –ª—é–±—ã—Ö –¥–∏—Å–∫–æ–≤
   - "Toshiba HDWT860" - –¥–ª—è –¥–∏—Å–∫–æ–≤ Toshiba HDWT860

## –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
- Windows 7/8/10/11
- Python 3.7+ (–≤—Å—Ç—Ä–æ–µ–Ω –≤ exe)
- SSH –¥–æ—Å—Ç—É–ø –∫ NAS
- –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ NAS

## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
- –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ–∑–¥–∞—é—Ç —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏
- –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å NAS –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—á–∞

## –ü–æ–¥–¥–µ—Ä–∂–∫–∞
- DSM 6.x –∏ 7.x
- –ú–æ–¥–µ–ª–∏: DS225+, DS224+, DS723+, DS923+
- –î–∏—Å–∫–∏: –ª—é–±—ã–µ, –≤–∫–ª—é—á–∞—è Toshiba HDWT860

## –ê–≤—Ç–æ—Ä
AtomAlex12
"""
    
    with open(f"{release_dir}/README.txt", "w", encoding="utf-8") as f:
        f.write(readme_content)
    
    print("‚úÖ README —Å–æ–∑–¥–∞–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞—Ç–Ω–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    bat_content = """@echo off
chcp 65001 >nul
title Synology Drive Unlocker
echo ========================================
echo Synology Drive Unlocker - –ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è
echo ========================================
echo.
echo –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
echo.
SynologyDriveUnlocker.exe
if %errorlevel% neq 0 (
    echo.
    echo [ERROR] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π
    pause
)
"""
    
    with open(f"{release_dir}/–ó–∞–ø—É—Å–∫.bat", "w", encoding="utf-8") as f:
        f.write(bat_content)
    
    print("‚úÖ –ë–∞—Ç–Ω–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–æ–∑–¥–∞–Ω")
    
    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞...")
    try:
        shutil.make_archive("SynologyDriveUnlocker_v1.0", "zip", release_dir)
        print("‚úÖ –ê—Ä—Ö–∏–≤ SynologyDriveUnlocker_v1.0.zip —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞—Ä—Ö–∏–≤–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –°–±–æ—Ä–∫–∞ Synology Drive Unlocker")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists("synology_unlocker_simple.py"):
        print("‚ùå –§–∞–π–ª synology_unlocker_simple.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PyInstaller
    if not install_pyinstaller():
        return
    
    # –°–æ–±–∏—Ä–∞–µ–º exe
    if not build_exe():
        return
    
    # –°–æ–∑–¥–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫
    create_installer()
    
    print("\nüéâ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("üìÅ –§–∞–π–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ 'release/'")
    print("üì¶ –ê—Ä—Ö–∏–≤: SynologyDriveUnlocker_v1.0.zip")

if __name__ == "__main__":
    main()
